#include "Draw.h"

void SSetColor(int mauBg, int mauchu) {
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hStdOut, (mauBg << 4) | mauchu);
}

void DrawBoard(int pSize)
{
	SetConsoleOutputCP(CP_ACP);
	//ngang
	for (int ix = LEFT + 1; ix <= LEFT + pSize * 4 - 1; ix += 4)
	{
		for (int iy = TOP; iy <= TOP + pSize * 2; iy += 2)
		{
			GotoXY(ix, iy);
			cout << char(205);
			GotoXY(ix + 1, iy);
			cout << char(205);
			GotoXY(ix + 2, iy);
			cout << char(205);
		}
	}
	//doc
	for (int iy = TOP + 1; iy <= TOP + pSize * 2 - 1; iy += 2)
	{
		for (int ix = LEFT; ix <= LEFT + pSize * 4; ix += 4)
		{
			GotoXY(ix, iy);
			cout << char(186);
		}
	}
	//cong
	for (int ix = LEFT + 4; ix <= LEFT + pSize * 4; ix += 4)
	{
		for (int iy = TOP + 2; iy <= TOP + pSize * 2 - 2; iy += 2)
		{
			GotoXY(ix, iy);
			cout << char(206);
		}
	}
	//cong tren/duoi
	for (int ix = LEFT + 4; ix <= LEFT + pSize * 4; ix += 4)
	{
		GotoXY(ix, TOP);
		cout << char(203);
		GotoXY(ix, TOP + pSize * 2);
		cout << char(202);
	}
	//cong trai/phai
	for (int iy = TOP + 2; iy <= TOP + pSize * 2; iy += 2)
	{
		GotoXY(LEFT, iy);
		cout << char(204);
		GotoXY(LEFT + pSize * 4, iy);
		cout << char(185);
	}
	GotoXY(LEFT, TOP); cout << char(201);//goc tren tai
	GotoXY(pSize * 4 + LEFT, TOP); cout << char(187); //goc tren phai
	GotoXY(LEFT, TOP + pSize * 2); cout << char(200); //goc duoi trai
	GotoXY(LEFT + pSize * 4, TOP + pSize * 2); cout << char(188); //goc duoi phai
}
void DrawBound()
{
	int x0 = 1;
	int y0 = 1;
	int w = 140;
	int h = 38;

	SetConsoleOutputCP(CP_ACP);
	//ngang
	for (int ix = x0 + 1; ix < x0 + w; ix++)
	{
		GotoXY(ix, y0);
		cout << char(205);
		GotoXY(ix, y0 + h);
		cout << char(205);
	}
	//doc
	for (int iy = x0 + 1; iy < y0 + h; iy++)
	{
		GotoXY(x0, iy);
		cout << char(186);
		GotoXY(x0 + w, iy);
		cout << char(186);
	}

	GotoXY(x0, y0); cout << char(201);
	GotoXY(x0 + w, y0); cout << char(187);
	GotoXY(x0, y0 + h); cout << char(200);
	GotoXY(x0 + w, y0 + h); cout << char(188);
}
void DrawGuideGame(int x, int y)
{
	Draw_Guide(x, y, text.moveLeftText);
	Draw_Guide(x, y + 1, text.moveRightText);
	Draw_Guide(x, y + 2, text.moveUpText);
	Draw_Guide(x, y + 3, text.moveDownText);
	Draw_Guide(x + 30, y, text.selectText);
	Draw_Guide(x + 30, y + 1, text.exitText);
	Draw_Guide(x + 30, y + 2, text.saveText);
}
void Draw_Guide(int x, int y, string nd)
{
	GotoXY(x, y); cout << nd;
}

void Draw_infor(int x, int y, int w, int h, const Player& player)
{
	if (player.Name == Player_1.Name)
	{
		SetColor(4, 15);
		Box(x, y, w, h);
		string s = "";
		// Hiển thị thông tin của Player 1
		GotoXY(x + 2, y + 1);
		cout << "Player 1 (X): " << player.Name;

		// Hiển thị số bước di chuyển (Moves)
		s = "Moves: " + to_string(player.Moves);
		GotoXY(x + 2, y + 2);
		cout << s;

		// Hiển thị số lượt thắng (Wins)
		s = "Wins: " + to_string(player.Wins);
		GotoXY(x + 2, y + 3);
		cout << s;
		SetColor(0, 15);
		// Bạn có thể tiếp tục thêm các thông tin khác nếu cần
	}
	else
	{
		SetColor(1, 15);
		Box(x, y, w, h);
		string s = "";
		// Hiển thị thông tin của Player 1
		GotoXY(x + 2, y + 1);
		cout << "Player 2 (O): " << player.Name;

		// Hiển thị số bước di chuyển (Moves)
		s = "Moves: " + to_string(player.Moves);
		GotoXY(x + 2, y + 2);
		cout << s;

		// Hiển thị số lượt thắng (Wins)
		s = "Wins: " + to_string(player.Wins);
		GotoXY(x + 2, y + 3);
		cout << s;
		SetColor(0, 15);
		// Bạn có thể tiếp tục thêm các thông tin khác nếu cần
	}
}

void Draw_infor2(int x, int y, int w, int h, const Player& player)
{
	if (player.Name == Player_1.Name)
	{
		SetColor(4, 15);
		Box(x, y, w, h);
		string s = "";

		// Hiển thị thông tin của Player 1
		GotoXY(x + 2, y + 1);
		SetColor(15, 0);
		cout << "Player 1 (X): ";
		SetColor(4, 15);
		cout << player.Name;
	
		// Hiển thị số bước di chuyển (Moves)
		s = "Moves: " + to_string(player.Moves);
		GotoXY(x + 2, y + 2);
		cout << s;

		// Hiển thị số lượt thắng (Wins)
		s = "Wins: " + to_string(player.Wins);
		GotoXY(x + 2, y + 3);
		cout << s;
		SetColor(0, 15);
		// Bạn có thể tiếp tục thêm các thông tin khác nếu cần
	}
	else
	{
		SetColor(1, 15);
		Box(x, y, w, h);
		string s = "";

		// Hiển thị thông tin của Player 1
		GotoXY(x + 2, y + 1);
		SetColor(15, 0);
		cout << "Player 2 (O): ";
		SetColor(1, 15);
		cout << player.Name;

		// Hiển thị số bước di chuyển (Moves)
		s = "Moves: " + to_string(player.Moves);
		GotoXY(x + 2, y + 2);
		cout << s;

		// Hiển thị số lượt thắng (Wins)
		s = "Wins: " + to_string(player.Wins);
		GotoXY(x + 2, y + 3);
		cout << s;
		SetColor(0, 15);
		// Bạn có thể tiếp tục thêm các thông tin khác nếu cần
	}
}

void DrawDragonWomen(int x, int y)
{
	int mang[30][27] = {
	{15, 15, 15, 15, 15, 15, 15, 0, 0, 15, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 0, 15, 0, 3, 3, 0, 3, 3, 0, 15, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 0, 3, 15, 15, 15, 15, 3, 1, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 0, 15, 0, 15, 0, 15, 15, 3, 0, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 0, 15, 0, 15, 0, 15, 15, 3, 0, 12, 12, 12, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 0, 0, 0, 15, 0, 15, 0, 15, 15, 3, 0, 0, 4, 4, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 0, 3, 3, 3, 1, 1, 15, 15, 15, 3, 3, 3, 1, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 0, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 0, 12, 0, 15, 15, 15, 15, 15, 15, 15, 15},
	{0, 3, 0, 3, 0, 3, 3, 3, 3, 1, 3, 15, 15, 15, 3, 1, 0, 4, 12, 0, 15, 15, 15, 15, 15, 15, 15},
	{0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 15, 15, 15, 15, 15, 1, 0, 4, 4, 0, 15, 15, 15, 15, 15, 15, 15},
	{0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 15, 15, 15, 15, 15, 1, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15},
	{0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 15, 0, 15, 15, 15, 1, 0, 12, 0, 15, 15, 15, 15, 15, 15, 15, 15},
	{0, 1, 3, 3, 3, 3, 3, 3, 1, 0, 0, 15, 15, 15, 1, 0, 4, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 0, 1, 3, 3, 3, 3, 1, 0, 15, 15, 15, 15, 1, 3, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	{15, 15, 0, 1, 1, 1, 1, 0, 15, 15, 15, 15, 15, 3, 0, 4, 0, 15, 0, 0, 0, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 0, 0, 0, 0, 15, 15, 15, 15, 15, 151, 3, 3, 0, 0, 0, 4, 4, 12, 0, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 0, 0, 15, 15, 15, 3, 3, 3, 0, 0, 15, 4, 12, 12, 0, 15, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 0, 3, 0, 15, 15, 15, 1, 3, 3, 3, 0, 0, 15, 4, 12, 0, 15, 15, 0, 0, 15},
	{15, 15, 15, 15, 15, 0, 3, 1, 0, 0, 15, 15, 15, 0, 1, 3, 3, 3, 1, 0, 15, 15, 0, 0, 3, 3, 0},
	{15, 15, 15, 15, 15, 0, 3, 0, 0, 0, 15, 15, 15, 15, 3, 3, 3, 3, 3, 1, 0, 0, 3, 3, 3, 0, 15},
	{15, 15, 15, 15, 15, 0, 3, 1, 0, 0, 15, 15, 15, 0, 1, 15, 15, 3, 3, 3, 3, 0, 3, 1, 0, 0, 15},
	{15, 15, 15, 15, 15, 0, 3, 3, 1, 0, 15, 15, 1, 0, 0, 15, 15, 3, 3, 3, 3, 0, 1, 15, 0, 15, 15},
	{15, 15, 15, 15, 15, 0, 3, 3, 1, 0, 0, 15, 15, 0, 1, 3, 3, 3, 3, 3, 1, 0, 15, 0, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 0, 0, 0, 15, 0, 15, 15, 15, 0, 1, 3, 3, 3, 1, 0, 15, 0, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 12, 12, 4, 0, 0, 0, 12, 12, 12, 12, 4, 0, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 12, 12, 4, 0, 0, 0, 12, 12, 12, 12, 4, 0, 15, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 15, 15, 0, 12, 15, 12, 12, 4, 4, 0, 12, 15, 12, 12, 12, 12, 4, 0, 15, 15, 15},
	{15, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 15},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
	};

	SetConsoleOutputCP(CP_UTF8);

	for (int i = 0; i < 30; i = i + 2)
	{
		GotoXY(x, y + i / 2);
		for (int x = 0; x < 27; x++)
		{

			SSetColor(mang[i][x], mang[i + 1][x]);
			cout << u8"▄";
		}cout << endl;
	}
	SetConsoleOutputCP(437);
}
void DrawDragonMen(int x, int y)
{

	int mang[30][27] = {
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 15, 0, 0, 15, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 10, 10, 0, 10, 10, 0, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 2, 10, 15, 15, 15, 15, 10, 0, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 10, 15, 15, 0, 15, 0, 15, 0, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 0, 10, 15, 15, 0, 15, 0, 15, 0, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 4, 4, 0, 0, 10, 15, 15, 0, 15, 0, 15, 0, 0, 0, 15, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 0, 2, 10, 10, 10, 15, 15, 15, 2, 2, 10, 10, 10, 0, 15, 15},
	   {15, 15, 15, 15, 15, 15, 15, 15, 0, 12, 0, 2, 10, 10, 10, 10, 10, 10, 2, 10, 10, 10, 10, 10, 10, 0, 15},
	   {15, 15, 15, 15, 15, 15, 15, 0, 12, 4, 0, 2, 10, 15, 15, 15, 10, 2, 10, 10, 10, 10, 0, 10, 0, 10, 0},
	   {15, 15, 15, 15, 15, 15, 15, 0, 4, 4, 0, 2, 15, 15, 15, 15, 15, 2, 10, 10, 10, 10, 10, 10, 10, 10, 0},
	   {15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 0, 2, 15, 15, 15, 15, 15, 2, 10, 10, 10, 10, 10, 10, 10, 10, 0},
	   {15, 15, 15, 15, 15, 15, 15, 15, 0, 12, 0, 2, 15, 15, 15, 0, 15, 0, 10, 10, 10, 10, 10, 10, 10, 10, 0},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 4, 0, 2, 15, 15, 15, 0, 0, 2, 10, 10, 10, 10, 10, 10, 2, 0},
	   {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 10, 2, 15, 15, 15, 15, 0, 2, 10, 10, 10, 10, 2, 0, 15},
	   {15, 15, 15, 15, 15, 15, 0, 0, 0, 15, 0, 4, 0, 10, 15, 15, 15, 15, 15, 0, 2, 2, 2, 2, 0, 15, 15},
	   {15, 15, 15, 15, 15, 0, 12, 4, 4, 0, 0, 0, 10, 10, 10, 15, 15, 15, 0, 0, 0, 0, 0, 0, 15, 15, 15},
	   {15, 15, 15, 15, 0, 12, 12, 4, 15, 0, 0, 10, 10, 10, 15, 15, 15, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15},
	   {15, 0, 0, 15, 0, 12, 4, 15, 0, 0, 10, 10, 10, 2, 15, 15, 15, 0, 2, 10, 0, 15, 15, 15, 15, 15, 15},
	   {0, 10, 10, 0, 0, 15, 15, 0, 2, 10, 10, 10, 2, 0, 15, 15, 15, 0, 0, 2, 10, 0, 15, 15, 15, 15, 15},
	   {15, 0, 10, 10, 10, 0, 0, 2, 10, 10, 10, 10, 10, 15, 15, 15, 15, 0, 0, 0, 10, 0, 15, 15, 15, 15, 15},
	   {15, 0, 0, 2, 10, 0, 10, 10, 10, 10, 15, 15, 2, 0, 15, 15, 15, 0, 0, 2, 10, 0, 15, 15, 15, 15, 15},
	   {15, 15, 0, 15, 2, 0, 10, 10, 10, 10, 15, 15, 0, 0, 15, 15, 15, 0, 2, 10, 10, 0, 15, 15, 15, 15, 15},
	   {15, 15, 15, 0, 15, 0, 2, 10, 10, 10, 10, 10, 2, 0, 15, 15, 0, 0, 2, 10, 10, 0, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 0, 15, 0, 2, 10, 10, 10, 2, 0, 15, 15, 15, 0, 15, 0, 0, 0, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 0, 4, 12, 12, 12, 12, 0, 15, 15, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 15, 0, 4, 12, 12, 12, 12, 0, 0, 0, 4, 12, 12, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 0, 4, 12, 12, 12, 12, 15, 12, 0, 4, 4, 12, 12, 15, 12, 0, 15, 15, 15, 15, 15, 15, 15, 15},
	   {15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 15, 15, 15, 15, 15, 15, 15, 15}
	};
	
	SetConsoleOutputCP(CP_UTF8);

	for (int i = 0; i < 30; i = i + 2)
	{
		GotoXY(x, y + i / 2);
		for (int x = 0; x < 27; x++)
		{

			SSetColor(mang[i][x], mang[i + 1][x]);
			cout << u8"▄";
		}cout << endl;
	}
	SetConsoleOutputCP(437);
}

void DrawLogoCaro(int x, int y) {

	// Ma trận 16x54 với các giá trị từ bảng số bạn cung cấp
	int matrix[16][54] = {
	{15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15},
	{0, 0, 15, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 0, 15, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 0, 15, 12, 12, 12, 12, 12, 12, 12, 0, 0},
	{0, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 4, 4, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 0, 4, 4, 4, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 0, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 12, 12, 12, 12, 0, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12, 12, 12, 0, 0, 0, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 12, 12,12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 0, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0},
	{0, 4, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 4, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0},
	{0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 0, 15, 15, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 0, 15, 15, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0},
	{15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15}
	};


	// Duyệt qua ma trận và in màu tương ứng
	SetConsoleOutputCP(CP_UTF8);
	for (int i = 0; i < 16; i = i + 2)
	{
		 GotoXY(x, y + i / 2);
		for (int x = 0; x < 54; x++)
		{
			SSetColor(matrix[i][x], matrix[i + 1][x]);
			cout << u8"▄";
		}cout << endl;
	}
	SetConsoleOutputCP(437);

}
void DrawDRAW(int x, int y){
	int matrix[14][52] = {
{0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0},
{0, 15, 15, 12, 12, 12, 12, 0, 0, 15, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 0, 15, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 15, 15, 12, 12, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 0},
{0, 15, 15, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 15, 15, 12, 4, 12, 12, 12, 12, 0, 15, 15, 0, 15, 15, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 15, 15, 12, 12, 0, 0, 12, 12, 0, 0, 12, 12, 12, 12, 0},
{0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 0, 0, 12, 12, 0, 0, 12, 12, 12, 12, 0},
{0, 12, 12, 12, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 0, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 0, 4, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 4, 0},
{0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 4, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 4, 0},
{0, 12, 12, 12, 0, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 0, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 0, 0},
{0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15},
{0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 15, 0, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15},
{0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 15, 0, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 0, 15},
{0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 4, 4, 12, 12, 12, 0, 15, 15, 15, 0, 0, 12, 12, 12, 12, 4, 4, 12, 12, 12, 12, 0, 0, 15},
{0, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 0, 12, 12, 12, 0, 4, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 15, 15, 0, 12, 12, 12, 4, 0, 0, 4, 12, 12, 12, 0, 15, 15},
{0, 12, 12, 12, 12, 12, 12, 0, 0, 15, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 0, 12, 12, 12, 0, 0, 12, 12, 12, 0, 15, 15, 15, 15, 0, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 0, 15, 15},
{0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 15, 15}
	};

	SetConsoleOutputCP(CP_UTF8);
	for (int i = 0; i < 14; i = i + 2)
	{
		GotoXY(x, y + i / 2);
		for (int x = 0; x < 52; x++)
		{
			SSetColor(matrix[i][x], matrix[i + 1][x]);
			cout << u8"▄";
		}cout << endl;
	}
	SetConsoleOutputCP(437);
}
void DrawWIN(int x, int y) {
	// Khai báo mảng 12x14 với các giá trị đã cho
	int matrix[12][14] = {
		{0, 0, 0, 0, 0, 15, 15, 15, 15, 0, 0, 0, 0, 0},
		{0, 15, 15, 12, 0, 15, 15, 15, 15, 0, 12, 15, 15, 0},
		{0, 15, 15, 12, 0, 0, 0, 0, 0, 0, 12, 15, 15, 0},
		{0, 12, 12, 12, 0, 0, 12, 12, 0, 0, 12, 12, 12, 0},
		{0, 4, 12, 12, 0, 0, 12, 12, 0, 0, 12, 12, 4, 0},
		{0, 0, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 0, 0},
		{15, 0, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 0, 15},
		{15, 0, 4, 12, 12, 12, 4, 4, 12, 12, 12, 4, 0, 15},
		{15, 0, 0, 12, 12, 4, 0, 0, 4, 12, 12, 0, 0, 15},
		{15, 15, 0, 4, 4, 0, 0, 0, 0, 4, 4, 0, 15, 15},
		{15, 15, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 15, 15},
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15}
	};

	SetConsoleOutputCP(CP_UTF8);
	for (int i = 0; i < 12; i = i + 2)
	{
		GotoXY(x, y + i / 2);
		for (int x = 0; x < 14; x++)
		{
			SSetColor(matrix[i][x], matrix[i + 1][x]);
			cout << u8"▄";
		}cout << endl;
	}
	SetConsoleOutputCP(437);
}